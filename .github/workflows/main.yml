name: Build

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: x86_64
            os: ubuntu-latest
            QEMU_ARCH: x86_64
            BASE_IMAGE: library/alpine

          # - name: aarch64
          #   os: ubuntu-latest
          #   QEMU_ARCH: aarch64
          #   BASE_IMAGE: arm64v8/alpine

          # - name: arm
          #   os: ubuntu-latest
          #   QEMU_ARCH: arm
          #   BASE_IMAGE: arm32v6/alpine

    steps:
    # checkout repo
    - uses: actions/checkout@v2

    # setup multi-arch build support
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static:register --reset

    - name: Get the upload URL for a release
      id: get_release
      uses: bruceadams/get-release@v1.2.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # build the image
    - name: Build Image
      run: |
        docker build --build-arg BASE_IMAGE=${{ matrix.BASE_IMAGE }} --build-arg QEMU_ARCH=${{ matrix.QEMU_ARCH }} -t node-builder .

    - name: Build Node v${{ steps.get_release.outputs.tag_name }}
      env:
        NODE_VERSION: ${{ steps.get_release.outputs.tag_name }}
      run: |
        docker run --rm -e NODE_VERSION=$NODE_VERSION -v $(pwd)/out:/out node-builder

    - name: Upload release binary
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./out/node-v${{ steps.get_release.outputs.tag_name }}-linux-${{ matrix.QEMU_ARCH }}-alpine.tar.gz
        asset_name: node-v${{ steps.get_release.outputs.tag_name }}-linux-${{ matrix.QEMU_ARCH }}-alpine.tar.gz
        asset_content_type: application/octet-stream